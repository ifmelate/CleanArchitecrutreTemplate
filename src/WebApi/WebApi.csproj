<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <IncludeOpenAPIAnalyzers>true</IncludeOpenAPIAnalyzers>
        <RootNamespace>ProjectName.ServiceName.WebApi</RootNamespace>
        <AssemblyName>ProjectName.ServiceName.WebApi</AssemblyName>
    </PropertyGroup>

    <ItemGroup>
      <Content Include="..\..\.dockerignore">
        <Link>.dockerignore</Link>
      </Content>
    </ItemGroup>

  <ItemGroup>
    <PackageReference Include="FluentValidation.AspNetCore" />
    <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.ApiExplorer" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Versioning.ApiExplorer" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.CodeStyle">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" />
    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks.EntityFrameworkCore" />
    <PackageReference Include="SonarAnalyzer.CSharp">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="MassTransit.Kafka" />
    <PackageReference Include="Swashbuckle.AspNetCore" />
    <PackageReference Include="Swashbuckle.AspNetCore.Newtonsoft" />
    <PackageReference Include="Swashbuckle.AspNetCore.Annotations" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerGen" />
  </ItemGroup>


  <ItemGroup>
    <ProjectReference Include="..\Application\Application.csproj" />
    <ProjectReference Include="..\Infrastructure\Infrastructure.csproj" />
  </ItemGroup>
  

  <ItemGroup>
    <Folder Include="wwwroot\api\v1\" />
    <Folder Include="wwwroot\api\v2\" />
  </ItemGroup>

  <!-- Auto-generated Open API specification and Angular TypeScript clients -->
  <PropertyGroup>
    <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
  </PropertyGroup>

  <Target Name="SwaggerPostBuildTarget" AfterTargets="Build">
    <Exec Command="dotnet tool restore" />
    <Exec Command="dotnet swagger tofile --output ./wwwroot/api/v1/swagger.json $(OutputPath)$(AssemblyName).dll v1" WorkingDirectory="$(ProjectDir)" ConsoleToMSBuild="true" IgnoreExitCode="true" ContinueOnError="WarnAndContinue" >
      <Output TaskParameter="ExitCode" PropertyName="SwaggerCommandExitCode" />
    </Exec>
    <Exec Command="dotnet swagger tofile --output ./wwwroot/api/v2/swagger.json $(OutputPath)$(AssemblyName).dll v2" WorkingDirectory="$(ProjectDir)" ConsoleToMSBuild="true" IgnoreExitCode="true" ContinueOnError="WarnAndContinue">
      <Output TaskParameter="ExitCode" PropertyName="SwaggerCommandExitCode" />
    </Exec>
    <Error Condition="'$(SwaggerCommandExitCode)' != '0'" Text="Swagger command failed with exit code $(SwaggerCommandExitCode)" />
  </Target>
</Project>
